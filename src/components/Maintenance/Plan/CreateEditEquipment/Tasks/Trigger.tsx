import React, {FC, FormEvent, useState} from 'react';
import makeStyles from "@material-ui/core/styles/makeStyles";
import TableContainer from "@material-ui/core/TableContainer/TableContainer";
import Table from '@material-ui/core/Table';
import TableBody from '@material-ui/core/TableBody';
import TableRow from '@material-ui/core/TableRow';
import TableCell from '@material-ui/core/TableCell';
import TableHead from '@material-ui/core/TableHead';
import AddIcon from '@material-ui/icons/Add';
import EditIcon from '@material-ui/icons/Edit';
import {useHistory} from "react-router";
import Button from '@material-ui/core/Button';
import IconButton from '@material-ui/core/IconButton';
import ButtonGroup from '@material-ui/core/ButtonGroup';
import {ITaskTrigger} from "../../../../../graphql/Maintenance.type";
import TableFooter from '@material-ui/core/TableFooter';

const useBottomNoneBorder = makeStyles({
   root: {
      borderBottom: "none"
   }
});

const useButtonStyles = makeStyles(theme => ({
   button: {
      margin: theme.spacing(1),
   }
}));

const useStyles2 = makeStyles({
   root: {
      width: '100%',
   },
   container: {
      // height: '31rem',
   },
   title: {
      flex: '1 1 100%',
   }
});

export const TaskTrigger: FC<{triggers: ITaskTrigger[]}> = ({triggers}) => {
   const history = useHistory();
   const classes = useStyles2();
   const bottomNoneBoder = useBottomNoneBorder();
   return (
      <>
         <TableContainer className={classes.container}>
            <Table size="small">
               <TableHead>
                  <TableRow>
                     <TableCell>Generated by</TableCell>
                     <TableCell>Description</TableCell>
                     <TableCell>Fix Schedule</TableCell>
                     <TableCell align="center">Options</TableCell>
                  </TableRow>
               </TableHead>
               <TableBody>
                  {triggers.sort((t1, t2) => t1.taskTriggerId - t2.taskTriggerId).map((row: ITaskTrigger, index) => (
                     <TableRow key={row.taskTriggerId} hover>
                        <TableCell>{row.kind}</TableCell>
                        <TableCell>{row.description}</TableCell>
                        <TableCell>{row.fixedSchedule}</TableCell>
                        <TableCell align="center">
                           <ButtonGroup variant="text" size="small" color="primary" aria-label="text primary button group">
                              <IconButton aria-label="edit equipment" onClick={()=> {}}>
                                 <EditIcon/>
                              </IconButton>
                           </ButtonGroup>
                        </TableCell>
                     </TableRow>
                  ))}
                  <TableRow key={1111} hover>
                     <TableCell>
                        <select style={{width: '100%'}}>
                           <option>DATE</option>
                           <option>EVENT</option>
                           <option>EVENT1</option>
                        </select>
                     </TableCell>
                     <TableCell>spsps</TableCell>
                     <TableCell>sasdsd</TableCell>
                     <TableCell align="center">
                        <ButtonGroup variant="text" size="small" color="primary" aria-label="text primary button group">
                           <IconButton aria-label="edit equipment" onClick={()=> {}}>
                              <EditIcon/>
                           </IconButton>
                        </ButtonGroup>
                     </TableCell>
                  </TableRow>
               </TableBody>
               <TableFooter>
                  <TableRow>
                     <TableCell  colSpan={4} className={bottomNoneBoder.root}>
                        <Button
                           variant="contained"
                           color="default"
                           size="small"
                           startIcon={<AddIcon/>}
                           onClick={() => {}}
                        >
                           Add
                        </Button>
                     </TableCell>
                  </TableRow>
               </TableFooter>
            </Table>
         </TableContainer>
      </>
   );
};
